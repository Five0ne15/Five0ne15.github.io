[{"id":"144f0b4d9b9f80ea377106e9c6a54a45","title":"Linux基础","content":"Linux基础内容一、Linux是什么？","slug":"Linux基础","date":"2025-07-29T02:38:02.000Z","categories_index":"","tags_index":"Linux","author_index":"wyf"},{"id":"1991d92d523634790e777614ebed22a2","title":"CentOS 8 环境搭建及配置","content":"CentOS 8 虚拟机搭建及配置一、下载安装Vmware Workstation在网上找教程，这里使用Vmware Workstation Pro 17\n二、下载CentOS 8 虚拟机镜像源在网上找下载地址，这里不做提供\n一、创建CentOS 8 虚拟机1、打开Vmware Workstation创建虚拟机点击右上角文件，新建虚拟机\n\n选择自定义，点击下一步\n\n硬件兼容性，这里选择Workstation 17.x，在新版本创建的虚拟机如果想在老版本使用可能会出错，点击下一步\n\n点击稍后安装操作系统，点击下一步\n\n客户机操作系统选择Linux，版本选择CentOS 8 64位，点击下一步\n\n修改虚拟机名称（建议修改，这样可以知道自己在什么时间创建了这个虚拟机，后续要用是能知道是干什么的），修改位置（建议不要放在C盘），点击下一步\n\n选择处理器数量，用来学习，1个就行，每个处理器的内核数量设置为2，点击下一步\n\n修改虚拟机内存4GB，点击下一步\n\n网络连接设置为NAT，点击下一步\n\n点击下一步\n\n点击下一步\n\n磁盘设置为创建新虚拟磁盘，点击下一步\n\n磁盘大小20GB，点击将虚拟磁盘存储为单个文件，点击下一步\n\n点击下一步\n\n点击自定义硬件，这里需要修改虚拟机硬件\n\n点击下方添加按钮，点击网络适配器，点击完成\n\n可以看到多了一个网络适配器2，点击关闭\n\n最后点击完成\n\n找到刚刚创建好的新虚拟机，点击编辑虚拟机设置，找到CD&#x2F;DVD，点击使用ISO映像文件，找到下载的CentOS 8 的iso文件，点击确定\n\n这样新建虚拟机就完成了。\n2、打开创建好的虚拟机开启此虚拟机，选择Install CentOS Linux 8，回车\n\n选择中文，简体中文，点击继续\n\n点击进入软件选择，找到传统UNIX兼容性、开发工具，勾上，点击完成\n\n点击安装目标位置，选择磁盘，点击完成\n\n点击网络和主机名，修改主机名，点击应用，选择以太网（ens160），打开，点击完成\n\n点击时间和日期，修改地址为上海，点击完成\n\n基本设置完成后点击开始安装\n\n设置root密码，点击完成\n\n创建一个用户，设置密码，点击完成\n\n都完成后等待安装\n\n安装完成后点击重启\n\n授权许可后登录root用户，在未列出里输入root，密码，即可登录\n\n现在这个界面右键选项里没有控制台，需要更改以下设置，点击右上角注销root用户，重新登录root用户时在登录左边的按钮选择经典，然后点击登录\n\n现在右键即可打开控制台\n\n现在在此界面拍摄一次快照，名称改为初始安装，便于日后使用\n\n3、对虚拟机进行配置关闭防火墙首先输入命令查看防火墙\n1systemctl status firewalld.service\n\n\n需要先临时关闭防火墙，再禁用防火墙\n12systemctl stop firewalld.servicesystemctl disable firewalld.service\n\n\n设置SELinux1vim /etc/selinux/config\n\n\n将SELINUX&#x3D;enforcing修改为SELINUX&#x3D;permissive\n\n关闭虚拟网卡查看虚拟网卡状态\n1systemctl status libvirtd.service\n\n\n关闭虚拟网卡\n1systemctl disable libvirtd.service\n\n\n换源1vim /etc/yum.repos.d/CentOS-AppStream.repo\n\n\n注释mirrorlist，取消注释beaseurl，将他的值更换成\n1https://mirrors.aliyun.com/centos-vault/8.5.2111/extras/$basearch/os/\n\n\n同样的方法修改\n12vim /etc/yum.repos.d/CentOS-Base.repovim /etc/yum.repos.d/CentOS-Extras.repo \n\n\n\n清除旧缓存，加载新源数据\n12yum clean all  #删除所有缓存的软件包数据（包括旧的软件包头文件、元数据、下载的软件包等）yum makecache  #从配置的软件仓库（Repository）下载最新的软件包列表、依赖关系等元数据，并存储在本地\n\n\n最后保存快照\n\n","slug":"CentOS-8-环境搭建及配置","date":"2025-07-28T13:51:19.000Z","categories_index":"","tags_index":"教程","author_index":"wyf"},{"id":"d69852fb48fa32246d1e3f9497c9ab8f","title":"Hexo个人博客搭建教程","content":"Hexo个人博客搭建教程一、准备工具1、Typora软件简介Typora 是一款轻便简洁的 Markdown 编辑器，将写作与预览窗口相结合，采用所见即所得的编辑模式，具有实时预览、语法扩展等诸多特色功能。在接下来的个人博客搭建过程中会使用到Markdown文件，建议安装使用Typora。\n安装过程下载地址：https://www.typoraio.cn/\n\n得到下载文件后双击安装，一直Next下一步，选择安装地址，安装完成后打开使用。\n2、Nodejs软件简介Node.js 是一个强大的、基于 JavaScript 和 V8 引擎的运行时环境，利用事件驱动、非阻塞 I&#x2F;O 模型实现了高性能，尤其擅长构建可扩展的网络应用和实时服务，并拥有npm这一巨大的开源生态系统作为后盾。它是现代全栈 JavaScript 开发的基础。\n安装过程下载地址：https://nodejs.org/zh-cn/download\n\n修改安装路径，一直Next下一步即可，建议保留Add to PATH，这样后续就不用在环境变量中配置，可以直接在全局使用Node命令，在控制台命令行输入可以验证安装\n1node -v\n\n1npm -v\n\n\n3、Git软件简介Git 是一个分布式版本控制系统（DVCS），由 Linus Torvalds（Linux 内核创始人）于 2005 年开发。其核心功能是：\n\n追踪文件变更：记录代码、文档的每一次修改\n多人协作：支持多人并行开发同一项目\n灾难恢复：可回溯到任意历史版本\n\n安装过程下载地址：https://git-scm.com/downloads/win\n\n选择合适的版本进行下载，Git官网提供两种类型：\n\nStandalone Installer（独立安装程序）：常规的安装包，会在系统中进行完整安装，写入系统注册表等，将 Git 集成到系统环境，安装后可在命令行等环境直接调用，是最常用的安装方式，比如 “Git for Windows&#x2F;x64 Setup” 这类，适合长期在固定电脑使用 Git 的场景 。\nPortable (“thumbdrive edition”，便携版 &#x2F; 拇指驱动器版)：无需安装，解压或拷贝后即可使用，不写入系统注册表，可放在 U 盘等移动存储设备，在不同电脑即插即用，像 “Git for Windows&#x2F;x64 Portable” ，方便在多台电脑临时使用 Git 且不想在每台电脑都安装的情况 。\n\n下载完成后双击打开文件，选择安装路径，一直Next下一步即可，安装完成会打开一个Git的介绍网页。\n4、Hexo软件简介Hexo 是一个基于 Node.js 的开源静态博客生成器，通过解析 Markdown 文件和模板，生成纯 HTML&#x2F;CSS&#x2F;JS 网站。核心定位：为开发者、写作者提供高效内容发布和极简技术栈维护的解决方案。\n安装过程使用管理员身份打开打开Windows控制台，下载命令：\n1npm install hexo-cli -g     #全局安装\n\n\n安装完成后输入命令去验证：\n1hexo -v\n\n\n二、本地博客部署需要从 GitHub 克隆 Hexo 官方模板仓库，在E盘空白处右键，点击Open Git Bash here（安装完Git就会出现）\n\n弹出如下界面\n\n输入命令\n1hexo init blog\n\n\n会提示 Please run ‘npm install’ in “E:\\blog” folder.\n用管理员身份打开cmd，进入E:\\bolg目录下\n1cd /d E:\\blog\n\n输入命令\n1npm install\n\n安装完成后显示如下界面\n\n\n如果在npm install这一步没有使用管理员打开cmd，而是进入blog文件里面，通过git bash输入npm install，可能会报错\n\n这里错误代码时4048，通过查阅发现可能就是权限不够的问题，因此通过管理员打开控制台再输入npm install就可以。这里只提供笔者遇到的一种错误解决方法，也是在查阅资料后找到的解决方法。\n至此本地博客已经搭建完成。\n1hexo g\n\nhexo g 是 Hexo 静态博客生成器的核心命令，将源代码（Markdown 文章&#x2F;主题&#x2F;配置等）编译成静态网页文件。\n\n1hexo s\n\nhexo s 是 Hexo 静态博客生成器的核心命令，全称为 hexo server。它的主要作用是启动本地服务器用于实时预览博客效果\n\n此时在浏览器输入http://localhost:4000/，可以看到一个简易的个人博客\n\n三、本地博客部署到云服务器在本地博客部署到云服务器之前，需要有一个本地搭建完的博客，一台云服务器，本地安装一个SSH连接工具（或者bash终端）\n1、搭建仓库搭建GitHub存储静态页面的仓库，首先注册&#x2F;登录Github，点击Create repository进入新建仓库页面\n\n仓库名输入：\n1用户名.github.io\n\n勾选 Public ，勾选 Add a README file ，拉到下面点击create创建\n2、生成SSH Keys进入任意文件夹，右键空白处然后点Git bash here，输入\n1ssh-keygen -t rsa -C &quot;邮件地址&quot;\n\n\n进入C:\\Users\\用户名，在里面进入.ssh文件，用记事本打开里面的id_rsa.pub,全选复制里面的代码\n\n然后打开 Github ，进入用户设置，找到 SSH keys 新建SSH keys，名称随意，在下面粘贴代码， 然后创建\n\n测试是否成功，在 Git bash 中输入\n1ssh -T git@github.com\n\n笔者在这一步时遇到了错误\n\n这里表示SSH的22端口可能被防火墙或者网络限制了，笔者给出一种方案，输入命令\n1ssh -T -p 443 git@github.com\n\n\n启用通过HTTPS的SSH连接，笔者在这里能够成功连接，在 SSH 配置文件中设置此设置，请在 ~/.ssh/config 编辑该文件（没有可以直接创建一个config文件，无后缀），并添加以下部分\n1234Host github.comHostname ssh.github.comPort 443User git\n\n最后可以通过再次连接到 GitHub.com 测试此项是否有效\n1ssh -T git@github.com\n\n\n笔者在这里就能够成功连接。\n3、上线博客进入之前的blog文件夹，用记事本打开_config.yml 拉到最下面将deploy后面的全删掉，复制粘贴这段\n123type: gitrepository: branch: main\n\n注意冒号后面有一个空格，每行前面有两个空格。\n进入Github之前生成的仓库页面，点击Code，将下方出现的https链接复制下来，粘贴到repositort: 后面，然后保存并退出。\n回到blog文件夹，打开Git bash，安装自动部署发布工具\n1npm install hexo-deployer-git --save\n\n\n\n\n接下来依次输入\n12hexo g（生成静态文件）hexo d（将静态文件上传到github）\n\n\n\n\n\n接下来我们就成功把本地内容上传到Github了，上传成功以后，我们就算搭建好了！上自己的网址看看吧，网址是我们之前设的仓库名：用户名.github.io\n4、发布文章1hexo new “文章名”\n\n 找到文章路径，修改标题、日期、标签（标签前要加一个空格，否则会报错！）\n12hexo ghexo d\n\n四、PicGo的Github配置1、配置Github新建公开仓库\n\n创建私人令牌token\n\n\n\n然后记下token值\n2、下载PicGo下载地址：https://github.com/Molunerfinn/PicGo/releases\n\n图床设置\n\n具体图床参数配置\n\n","slug":"Hexo个人博客搭建教程","date":"2025-07-28T13:41:52.000Z","categories_index":"","tags_index":"教程","author_index":"wyf"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post1$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server1$ hexo server\n\nMore info: Server\nGenerate static files1$ hexo generate\n\nMore info: Generating\nDeploy to remote sites1$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2025-07-28T07:45:38.829Z","categories_index":"","tags_index":"","author_index":"wyf"}]