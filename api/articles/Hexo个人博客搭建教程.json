{"title":"Hexo个人博客搭建教程","uid":"d69852fb48fa32246d1e3f9497c9ab8f","slug":"Hexo个人博客搭建教程","date":"2025-07-28T13:41:52.000Z","updated":"2025-07-28T13:51:27.601Z","comments":true,"path":"api/articles/Hexo个人博客搭建教程.json","keywords":null,"cover":[],"content":"<h1 id=\"Hexo个人博客搭建教程\"><a href=\"#Hexo个人博客搭建教程\" class=\"headerlink\" title=\"Hexo个人博客搭建教程\"></a>Hexo个人博客搭建教程</h1><h2 id=\"一、准备工具\"><a href=\"#一、准备工具\" class=\"headerlink\" title=\"一、准备工具\"></a>一、准备工具</h2><h3 id=\"1、Typora\"><a href=\"#1、Typora\" class=\"headerlink\" title=\"1、Typora\"></a>1、Typora</h3><h4 id=\"软件简介\"><a href=\"#软件简介\" class=\"headerlink\" title=\"软件简介\"></a>软件简介</h4><p>Typora 是一款轻便简洁的 Markdown 编辑器，将写作与预览窗口相结合，采用所见即所得的编辑模式，具有实时预览、语法扩展等诸多特色功能。在接下来的个人博客搭建过程中会使用到Markdown文件，建议安装使用Typora。</p>\n<h4 id=\"安装过程\"><a href=\"#安装过程\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h4><p>下载地址：<a href=\"https://www.typoraio.cn/\">https://www.typoraio.cn/</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728103500292.png\" alt=\"image-20250728103500292\"></p>\n<p>得到下载文件后双击安装，一直Next下一步，选择安装地址，安装完成后打开使用。</p>\n<h3 id=\"2、Nodejs\"><a href=\"#2、Nodejs\" class=\"headerlink\" title=\"2、Nodejs\"></a>2、Nodejs</h3><h4 id=\"软件简介-1\"><a href=\"#软件简介-1\" class=\"headerlink\" title=\"软件简介\"></a>软件简介</h4><p>Node.js 是一个强大的、基于 JavaScript 和 V8 引擎的<strong>运行时环境</strong>，利用<strong>事件驱动、非阻塞 I&#x2F;O</strong> 模型实现了高性能，尤其擅长构建<strong>可扩展的网络应用和实时服务</strong>，并拥有<strong>npm</strong>这一巨大的开源生态系统作为后盾。它是现代全栈 JavaScript 开发的基础。</p>\n<h4 id=\"安装过程-1\"><a href=\"#安装过程-1\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h4><p>下载地址：<a href=\"https://nodejs.org/zh-cn/download\">https://nodejs.org/zh-cn/download</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728104143655.png\" alt=\"image-20250728104143655\"></p>\n<p>修改安装路径，一直Next下一步即可，建议保留Add to PATH，这样后续就不用在环境变量中配置，可以直接在全局使用Node命令，在控制台命令行输入可以验证安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728104256382.png\" alt=\"image-20250728104256382\"></p>\n<h3 id=\"3、Git\"><a href=\"#3、Git\" class=\"headerlink\" title=\"3、Git\"></a>3、Git</h3><h4 id=\"软件简介-2\"><a href=\"#软件简介-2\" class=\"headerlink\" title=\"软件简介\"></a>软件简介</h4><p>Git 是一个分布式版本控制系统（DVCS），由 Linus Torvalds（Linux 内核创始人）于 2005 年开发。其核心功能是：</p>\n<ol>\n<li>追踪文件变更：记录代码、文档的每一次修改</li>\n<li>多人协作：支持多人并行开发同一项目</li>\n<li>灾难恢复：可回溯到任意历史版本</li>\n</ol>\n<h4 id=\"安装过程-2\"><a href=\"#安装过程-2\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h4><p>下载地址：<a href=\"https://git-scm.com/downloads/win\">https://git-scm.com/downloads/win</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728105745176.png\" alt=\"image-20250728105745176\"></p>\n<p>选择合适的版本进行下载，Git官网提供两种类型：</p>\n<ul>\n<li><strong>Standalone Installer（独立安装程序）</strong>：常规的安装包，会在系统中进行完整安装，写入系统注册表等，将 Git 集成到系统环境，安装后可在命令行等环境直接调用，是最常用的安装方式，比如 “Git for Windows&#x2F;x64 Setup” 这类，适合长期在固定电脑使用 Git 的场景 。</li>\n<li><strong>Portable (“thumbdrive edition”，便携版 &#x2F; 拇指驱动器版)</strong>：无需安装，解压或拷贝后即可使用，不写入系统注册表，可放在 U 盘等移动存储设备，在不同电脑即插即用，像 “Git for Windows&#x2F;x64 Portable” ，方便在多台电脑临时使用 Git 且不想在每台电脑都安装的情况 。</li>\n</ul>\n<p>下载完成后双击打开文件，选择安装路径，一直Next下一步即可，安装完成会打开一个Git的介绍网页。</p>\n<h3 id=\"4、Hexo\"><a href=\"#4、Hexo\" class=\"headerlink\" title=\"4、Hexo\"></a>4、Hexo</h3><h4 id=\"软件简介-3\"><a href=\"#软件简介-3\" class=\"headerlink\" title=\"软件简介\"></a>软件简介</h4><p>Hexo 是一个基于 Node.js 的开源静态博客生成器，通过解析 Markdown 文件和模板，生成纯 HTML&#x2F;CSS&#x2F;JS 网站。核心定位：为开发者、写作者提供高效内容发布和极简技术栈维护的解决方案。</p>\n<h4 id=\"安装过程-3\"><a href=\"#安装过程-3\" class=\"headerlink\" title=\"安装过程\"></a>安装过程</h4><p>使用管理员身份打开打开Windows控制台，下载命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g     <span class=\"comment\">#全局安装</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728111026941.png\" alt=\"image-20250728111026941\"></p>\n<p>安装完成后输入命令去验证：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo -v</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728111124597.png\" alt=\"image-20250728111124597\"></p>\n<h2 id=\"二、本地博客部署\"><a href=\"#二、本地博客部署\" class=\"headerlink\" title=\"二、本地博客部署\"></a>二、本地博客部署</h2><p>需要从 GitHub 克隆 Hexo 官方模板仓库，在E盘空白处右键，点击Open Git Bash here（安装完Git就会出现）</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728154951613.png\" alt=\"image-20250728154951613\"></p>\n<p>弹出如下界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728155016963.png\" alt=\"image-20250728155016963\"></p>\n<p>输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728154636082.png\" alt=\"image-20250728154636082\"></p>\n<p>会提示 Please run ‘npm install’ in “E:\\blog” folder.</p>\n<p>用管理员身份打开cmd，进入E:\\bolg目录下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /d E:\\blog</span><br></pre></td></tr></table></figure>\n\n<p>输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后显示如下界面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728155102141.png\" alt=\"image-20250728155102141\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728155145246.png\" alt=\"image-20250728155145246\"></p>\n<p>如果在npm install这一步没有使用管理员打开cmd，而是进入blog文件里面，通过git bash输入npm install，可能会报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728155353859.png\" alt=\"image-20250728155353859\"></p>\n<p>这里错误代码时4048，通过查阅发现可能就是权限不够的问题，因此通过管理员打开控制台再输入npm install就可以。这里只提供笔者遇到的一种错误解决方法，也是在查阅资料后找到的解决方法。</p>\n<p>至此本地博客已经搭建完成。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br></pre></td></tr></table></figure>\n\n<p><code>hexo g</code> 是 Hexo 静态博客生成器的核心命令，将源代码（Markdown 文章&#x2F;主题&#x2F;配置等）编译成静态网页文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728155951506.png\" alt=\"image-20250728155951506\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p><code>hexo s</code> 是 Hexo 静态博客生成器的核心命令，全称为 <strong><code>hexo server</code></strong>。它的主要作用是启动本地服务器用于实时预览博客效果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728160248736.png\" alt=\"image-20250728160248736\"></p>\n<p>此时在浏览器输入<a href=\"http://localhost:4000/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2\">http://localhost:4000/，可以看到一个简易的个人博客</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728160353961.png\" alt=\"image-20250728160353961\"></p>\n<h2 id=\"三、本地博客部署到云服务器\"><a href=\"#三、本地博客部署到云服务器\" class=\"headerlink\" title=\"三、本地博客部署到云服务器\"></a>三、本地博客部署到云服务器</h2><p>在本地博客部署到云服务器之前，需要有一个本地搭建完的博客，一台云服务器，本地安装一个SSH连接工具（或者bash终端）</p>\n<h3 id=\"1、搭建仓库\"><a href=\"#1、搭建仓库\" class=\"headerlink\" title=\"1、搭建仓库\"></a>1、搭建仓库</h3><p>搭建GitHub存储静态页面的仓库，首先注册&#x2F;登录Github，点击Create repository进入新建仓库页面</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728161356352.png\" alt=\"image-20250728161356352\"></p>\n<p>仓库名输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用户名.github.io</span><br></pre></td></tr></table></figure>\n\n<p>勾选 Public ，勾选 Add a README file ，拉到下面点击create创建</p>\n<h3 id=\"2、生成SSH-Keys\"><a href=\"#2、生成SSH-Keys\" class=\"headerlink\" title=\"2、生成SSH Keys\"></a>2、生成SSH Keys</h3><p>进入任意文件夹，右键空白处然后点Git bash here，输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;邮件地址&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728162146804.png\" alt=\"image-20250728162146804\"></p>\n<p>进入C:\\Users\\用户名，在里面进入.ssh文件，用记事本打开里面的id_rsa.pub,全选复制里面的代码</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728162348616.png\" alt=\"image-20250728162348616\"></p>\n<p>然后打开 Github ，进入用户设置，找到 SSH keys 新建SSH keys，名称随意，在下面粘贴代码， 然后创建</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728162528276.png\" alt=\"image-20250728162528276\"></p>\n<p>测试是否成功，在 Git bash 中输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>笔者在这一步时遇到了错误</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728164135975.png\" alt=\"image-20250728164135975\"></p>\n<p>这里表示SSH的22端口可能被防火墙或者网络限制了，笔者给出一种方案，输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T -p 443 git@github.com</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728163522827.png\" alt=\"image-20250728163522827\"></p>\n<p>启用通过HTTPS的SSH连接，笔者在这里能够成功连接，在 SSH 配置文件中设置此设置，请在 <strong><code>~/.ssh/config</code></strong> 编辑该文件（没有可以直接创建一个config文件，无后缀），并添加以下部分</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host github.com</span><br><span class=\"line\">Hostname ssh.github.com</span><br><span class=\"line\">Port 443</span><br><span class=\"line\">User git</span><br></pre></td></tr></table></figure>\n\n<p>最后可以通过再次连接到 GitHub.com 测试此项是否有效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728165048180.png\" alt=\"image-20250728165048180\"></p>\n<p>笔者在这里就能够成功连接。</p>\n<h3 id=\"3、上线博客\"><a href=\"#3、上线博客\" class=\"headerlink\" title=\"3、上线博客\"></a>3、上线博客</h3><p>进入之前的blog文件夹，用记事本打开_config.yml 拉到最下面将deploy后面的全删掉，复制粘贴这段</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">type</span>: git</span><br><span class=\"line\">repository: </span><br><span class=\"line\">branch: main</span><br></pre></td></tr></table></figure>\n\n<p>注意冒号后面有一个空格，每行前面有两个空格。</p>\n<p>进入Github之前生成的仓库页面，点击Code，将下方出现的https链接复制下来，粘贴到repositort: 后面，然后保存并退出。</p>\n<p>回到blog文件夹，打开Git bash，安装自动部署发布工具</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728165940924.png\" alt=\"image-20250728165940924\"></p>\n<p>接下来依次输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g（生成静态文件）</span><br><span class=\"line\">hexo d（将静态文件上传到github）</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728170747163.png\" alt=\"image-20250728170747163\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728170811227.png\" alt=\"image-20250728170811227\"></p>\n<p>接下来我们就成功把本地内容上传到Github了，上传成功以后，我们就算搭建好了！上自己的网址看看吧，网址是我们之前设的仓库名：用户名.github.io</p>\n<h3 id=\"4、发布文章\"><a href=\"#4、发布文章\" class=\"headerlink\" title=\"4、发布文章\"></a>4、发布文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new “文章名”</span><br></pre></td></tr></table></figure>\n\n<p> 找到文章路径，修改标题、日期、标签（标签前要加一个空格，否则会报错！）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、PicGo的Github配置\"><a href=\"#四、PicGo的Github配置\" class=\"headerlink\" title=\"四、PicGo的Github配置\"></a>四、PicGo的Github配置</h2><h3 id=\"1、配置Github\"><a href=\"#1、配置Github\" class=\"headerlink\" title=\"1、配置Github\"></a>1、配置Github</h3><p>新建公开仓库</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728212622324.png\" alt=\"image-20250728212622324\"></p>\n<p>创建私人令牌token</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728212756301.png\" alt=\"image-20250728212756301\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728212843600.png\" alt=\"image-20250728212843600\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728213113810.png\" alt=\"image-20250728213113810\"></p>\n<p>然后记下token值</p>\n<h3 id=\"2、下载PicGo\"><a href=\"#2、下载PicGo\" class=\"headerlink\" title=\"2、下载PicGo\"></a>2、下载PicGo</h3><p>下载地址：<a href=\"https://github.com/Molunerfinn/PicGo/releases\">https://github.com/Molunerfinn/PicGo/releases</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728213240759.png\" alt=\"image-20250728213240759\"></p>\n<p>图床设置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728213343039.png\" alt=\"image-20250728213343039\"></p>\n<p>具体图床参数配置</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250728213409711.png\" alt=\"image-20250728213409711\"></p>\n","feature":true,"text":"Hexo个人博客搭建教程一、准备工具1、Typora软件简介Typora 是一款轻便简洁的 Markdown 编辑器，将写作与预览窗口相结合，采用所见即所得的编...","permalink":"/post/Hexo个人博客搭建教程","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"教程","slug":"教程","count":2,"path":"api/tags/教程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B\"><span class=\"toc-text\">Hexo个人博客搭建教程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%87%86%E5%A4%87%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">一、准备工具</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81Typora\"><span class=\"toc-text\">1、Typora</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">软件简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">安装过程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81Nodejs\"><span class=\"toc-text\">2、Nodejs</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E7%AE%80%E4%BB%8B-1\"><span class=\"toc-text\">软件简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B-1\"><span class=\"toc-text\">安装过程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81Git\"><span class=\"toc-text\">3、Git</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E7%AE%80%E4%BB%8B-2\"><span class=\"toc-text\">软件简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B-2\"><span class=\"toc-text\">安装过程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E3%80%81Hexo\"><span class=\"toc-text\">4、Hexo</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E7%AE%80%E4%BB%8B-3\"><span class=\"toc-text\">软件简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B-3\"><span class=\"toc-text\">安装过程</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">二、本地博客部署</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8\"><span class=\"toc-text\">三、本地博客部署到云服务器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E6%90%AD%E5%BB%BA%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">1、搭建仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E7%94%9F%E6%88%90SSH-Keys\"><span class=\"toc-text\">2、生成SSH Keys</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3%E3%80%81%E4%B8%8A%E7%BA%BF%E5%8D%9A%E5%AE%A2\"><span class=\"toc-text\">3、上线博客</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4%E3%80%81%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">4、发布文章</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81PicGo%E7%9A%84Github%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">四、PicGo的Github配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E9%85%8D%E7%BD%AEGithub\"><span class=\"toc-text\">1、配置Github</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2%E3%80%81%E4%B8%8B%E8%BD%BDPicGo\"><span class=\"toc-text\">2、下载PicGo</span></a></li></ol></li></ol></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"CentOS 8 环境搭建及配置","uid":"1991d92d523634790e777614ebed22a2","slug":"CentOS-8-环境搭建及配置","date":"2025-07-28T13:51:19.000Z","updated":"2025-07-28T13:55:05.216Z","comments":true,"path":"api/articles/CentOS-8-环境搭建及配置.json","keywords":null,"cover":[],"text":"CentOS 8 虚拟机搭建及配置一、下载安装Vmware Workstation在网上找教程，这里使用Vmware Workstation Pro 17 二、...","permalink":"/post/CentOS-8-环境搭建及配置","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"教程","slug":"教程","count":2,"path":"api/tags/教程.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2025-07-28T07:45:38.829Z","updated":"2025-07-28T09:33:20.734Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info...","permalink":"/post/hello-world","photos":[],"count_time":{"symbolsCount":444,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Aurora","slug":"blog-author","avatar":"","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}